package seeder

import (
	"math/rand"
	"time"

	"github.com/go-goyave/goyave-blog-example/database/model"
	"goyave.dev/goyave/v4/database"
)

const (
	// ArticleCount the number of articles generated by the User seeder
	ArticleCount = 40
)

// Article seeder for articles. Generate and save articles with a random
// author in the database.
func Article() {
	rand.Seed(time.Now().UTC().UnixNano())

	users := make([]uint, 0, 10)
	db := database.Conn()
	if err := db.Model(&model.User{}).Select("id").Find(&users).Error; err != nil {
		panic(err)
	}

	factory := database.NewFactory(model.ArticleGenerator)
	articles := make([]*model.Article, 0, ArticleCount)
	for i := 0; i < ArticleCount; i++ {
		o := &model.Article{
			AuthorID: uint(users[rand.Intn(len(users))]),
		}
		generated := factory.Override(o).Generate(1).([]*model.Article)[0]
		articles = append(articles, generated)
	}

	if err := db.Create(articles).Error; err != nil {
		panic(err)
	}
}
